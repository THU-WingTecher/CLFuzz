static const std::map<uint64_t, std::string> LUT = {
    { CF_ECC_CURVE("brainpool160r1"), "brainpool160r1" },
    { CF_ECC_CURVE("brainpool192r1"), "brainpool192r1" },
    { CF_ECC_CURVE("brainpool224r1"), "brainpool224r1" },
    { CF_ECC_CURVE("brainpool256r1"), "brainpool256r1" },
    { CF_ECC_CURVE("brainpool320r1"), "brainpool320r1" },
    { CF_ECC_CURVE("brainpool384r1"), "brainpool384r1" },
    { CF_ECC_CURVE("brainpool512r1"), "brainpool512r1" },
    { CF_ECC_CURVE("frp256v1"), "frp256v1" },
    { CF_ECC_CURVE("gost_256A"), "gost_256A" },
    { CF_ECC_CURVE("gost_512A"), "gost_512A" },
    { CF_ECC_CURVE("secp160k1"), "secp160k1" },
    { CF_ECC_CURVE("secp160r1"), "secp160r1" },
    { CF_ECC_CURVE("secp160r2"), "secp160r2" },
    { CF_ECC_CURVE("secp192k1"), "secp192k1" },
    { CF_ECC_CURVE("secp192r1"), "secp192r1" },
    { CF_ECC_CURVE("secp224k1"), "secp224k1" },
    { CF_ECC_CURVE("secp224r1"), "secp224r1" },
    { CF_ECC_CURVE("secp256k1"), "secp256k1" },
    { CF_ECC_CURVE("secp256r1"), "secp256r1" },
    { CF_ECC_CURVE("secp384r1"), "secp384r1" },
    { CF_ECC_CURVE("secp521r1"), "secp521r1" },
    { CF_ECC_CURVE("sm2p256v1"), "sm2p256v1" },
    { CF_ECC_CURVE("x962_p192v2"), "x962_p192v2" },
    { CF_ECC_CURVE("x962_p192v3"), "x962_p192v3" },
    { CF_ECC_CURVE("x962_p239v1"), "x962_p239v1" },
    { CF_ECC_CURVE("x962_p239v2"), "x962_p239v2" },
    { CF_ECC_CURVE("x962_p239v3"), "x962_p239v3" },
};
